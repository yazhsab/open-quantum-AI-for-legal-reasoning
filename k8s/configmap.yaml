apiVersion: v1
kind: ConfigMap
metadata:
  name: xqelm-config
  namespace: xqelm
data:
  # Database Configuration
  DATABASE_HOST: "postgres-service"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "xqelm"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  NEO4J_HOST: "neo4j-service"
  NEO4J_PORT: "7687"
  
  # API Configuration
  ALGORITHM: "HS256"
  ACCESS_TOKEN_EXPIRE_MINUTES: "30"
  
  # Quantum Configuration
  QUANTUM_BACKEND: "default.qubit"
  QUANTUM_SHOTS: "1024"
  
  # Environment
  ENVIRONMENT: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  
  # Application Settings
  MAX_UPLOAD_SIZE: "100MB"
  RATE_LIMIT_PER_MINUTE: "100"
  RATE_LIMIT_PER_HOUR: "1000"
  RATE_LIMIT_PER_DAY: "10000"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: xqelm
data:
  POSTGRES_DB: "xqelm"
  POSTGRES_USER: "xqelm_user"
  PGDATA: "/var/lib/postgresql/data/pgdata"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: xqelm
data:
  redis.conf: |
    # Redis Configuration
    maxmemory 512mb
    maxmemory-policy allkeys-lru
    save 900 1
    save 300 10
    save 60 10000
    appendonly yes
    appendfsync everysec
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: neo4j-config
  namespace: xqelm
data:
  NEO4J_AUTH: "neo4j/neo4j_password"
  NEO4J_PLUGINS: '["apoc", "graph-data-science"]'
  NEO4J_dbms_security_procedures_unrestricted: "apoc.*,gds.*"
  NEO4J_dbms_memory_heap_initial__size: "512m"
  NEO4J_dbms_memory_heap_max__size: "2G"
  NEO4J_dbms_memory_pagecache_size: "1G"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: xqelm
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream backend {
            server backend-service:8000;
        }
        
        upstream frontend {
            server frontend-service:3000;
        }
        
        server {
            listen 80;
            server_name _;
            
            # Security headers
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
            
            # API routes
            location /api/ {
                proxy_pass http://backend/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # CORS headers
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                
                # Handle preflight requests
                if ($request_method = 'OPTIONS') {
                    add_header Access-Control-Allow-Origin *;
                    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                    add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                    add_header Access-Control-Max-Age 1728000;
                    add_header Content-Type 'text/plain; charset=utf-8';
                    add_header Content-Length 0;
                    return 204;
                }
            }
            
            # Frontend routes
            location / {
                proxy_pass http://frontend/;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Handle client-side routing
                try_files $uri $uri/ /index.html;
            }
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: xqelm
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'xqelm-backend'
        static_configs:
          - targets: ['backend-service:8000']
        metrics_path: '/metrics'
        scrape_interval: 30s
      
      - job_name: 'postgres'
        static_configs:
          - targets: ['postgres-exporter:9187']
      
      - job_name: 'redis'
        static_configs:
          - targets: ['redis-exporter:9121']
      
      - job_name: 'neo4j'
        static_configs:
          - targets: ['neo4j-service:2004']
        metrics_path: '/metrics'
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - xqelm
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name